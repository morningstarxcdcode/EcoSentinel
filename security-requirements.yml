# EcoSentinel Security Requirements

security:
  packages:
    # Authentication & Authorization
    - jsonwebtoken@^9.0.0
    - bcrypt@^5.1.0
    - passport@^0.6.0
    - passport-jwt@^4.0.1
    - passport-local@^1.0.0
    
    # Rate Limiting & Security Headers
    - express-rate-limit@^6.7.0
    - helmet@^6.1.5
    - cors@^2.8.5
    - express-validator@^6.15.0
    
    # Encryption & Crypto
    - crypto-js@^4.1.1
    - node-forge@^1.3.1
    
    # Security Scanning
    - snyk@^1.1174.0
    - npm-audit-resolver@^3.0.0-7
    
    # Monitoring & Logging
    - winston@^3.8.2
    - express-winston@^4.2.0
    - morgan@^1.10.0
    
    # Environment Security
    - dotenv-vault@^1.21.0
    - dotenv-expand@^10.0.0

  devDependencies:
    # Security Testing
    - "@types/bcrypt": "^5.0.0"
    - "@types/jsonwebtoken": "^9.0.1"
    - "@types/passport": "^1.0.12"
    - "@types/passport-jwt": "^3.0.8"
    - "@types/passport-local": "^1.0.35"
    - "@types/cors": "^2.8.13"
    - "@types/crypto-js": "^4.1.1"
    
    # Security Linting
    - "eslint-plugin-security": "^1.7.1"
    - "eslint-plugin-no-secrets": "^0.8.9"
    
    # Testing Security
    - "supertest": "^6.3.3"
    - "jest-security": "^1.0.0"

  pythonPackages:
    # Security scanning for Python AI components
    - bandit>=1.7.5
    - safety>=2.3.4
    - pip-audit>=2.5.4
    
    # Secure ML libraries
    - cryptography>=40.0.1
    - pycryptodome>=3.17.0
    
    # Environment security
    - python-dotenv>=1.0.0
    - keyring>=23.13.1

environments:
  required:
    # JWT Configuration
    - JWT_SECRET=<generate-with-crypto.randomBytes(64).toString('hex')>
    - JWT_ALGORITHM=HS256
    - JWT_EXPIRATION=1h
    - JWT_REFRESH_EXPIRATION=7d
    
    # Encryption Keys
    - ENCRYPTION_KEY=<generate-with-crypto.randomBytes(32).toString('hex')>
    - API_KEY_SALT=<generate-with-crypto.randomBytes(16).toString('hex')>
    - SESSION_SECRET=<generate-with-crypto.randomBytes(32).toString('hex')>
    
    # Database Security
    - DATABASE_SSL_MODE=require
    - DATABASE_SSL_CERT_PATH=/path/to/client-cert.pem
    - DATABASE_SSL_KEY_PATH=/path/to/client-key.pem
    - DATABASE_SSL_CA_PATH=/path/to/ca-cert.pem
    
    # Redis Security
    - REDIS_TLS_ENABLED=true
    - REDIS_AUTH_PASSWORD=<secure-password>
    - REDIS_SSL_CERT_PATH=/path/to/redis-cert.pem
    
    # API Security
    - API_RATE_LIMIT_WINDOW=900000  # 15 minutes
    - API_RATE_LIMIT_MAX=100
    - API_AUTH_RATE_LIMIT_MAX=5
    
    # Security Monitoring
    - SECURITY_LOG_LEVEL=info
    - SECURITY_ALERT_EMAIL=morningstar.xcd@gmail.com
    - SLACK_WEBHOOK_URL=<slack-webhook-for-alerts>
    
    # External API Security
    - NASA_API_KEY=<nasa-earth-api-key>
    - WEATHER_API_KEY=<openweathermap-api-key>
    - SATELLITE_API_KEY=<satellite-data-api-key>

configurations:
  nginx:
    # Security headers
    security_headers: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'" always;
      add_header Strict-Transport-Security "max-age=63072000" always;
    
    # Rate limiting
    rate_limiting: |
      limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
      limit_req_zone $binary_remote_addr zone=auth:10m rate=1r/s;
      limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/m;
  
  postgresql:
    # Security settings
    settings: |
      ssl = on
      ssl_cert_file = 'server.crt'
      ssl_key_file = 'server.key'
      ssl_ca_file = 'ca.crt'
      password_encryption = scram-sha-256
      row_security = on
      log_connections = on
      log_disconnections = on
      log_checkpoints = on
      log_lock_waits = on
      shared_preload_libraries = 'pg_stat_statements'
  
  redis:
    # Security configuration
    settings: |
      requirepass <strong-password>
      rename-command FLUSHALL ""
      rename-command FLUSHDB ""
      rename-command CONFIG ""
      rename-command EVAL ""
      tls-port 6380
      tls-cert-file /path/to/redis.crt
      tls-key-file /path/to/redis.key
      tls-ca-cert-file /path/to/ca.crt

monitoring:
  security_metrics:
    # Authentication metrics
    - auth_attempts_total
    - auth_failures_total
    - auth_success_total
    - password_reset_attempts_total
    
    # API metrics
    - api_requests_total
    - api_rate_limit_hits_total
    - api_errors_total
    - api_response_time_seconds
    
    # Security events
    - security_alerts_total
    - vulnerability_scans_total
    - security_incidents_total
    - ssl_cert_expiry_days
    
    # System metrics
    - failed_login_attempts_total
    - suspicious_activity_total
    - malware_detections_total
    - firewall_blocked_requests_total

  alerts:
    critical:
      - name: "High Authentication Failures"
        condition: "rate(auth_failures_total[5m]) > 10"
        action: "immediate_notification"
      
      - name: "Potential Data Breach"
        condition: "security_incidents_total > 0"
        action: "emergency_response"
      
      - name: "SSL Certificate Expiring"
        condition: "ssl_cert_expiry_days < 7"
        action: "urgent_renewal"
    
    warning:
      - name: "High API Error Rate"
        condition: "rate(api_errors_total[10m]) > 50"
        action: "investigate"
      
      - name: "Unusual Traffic Pattern"
        condition: "rate(api_requests_total[1m]) > 1000"
        action: "monitor"

compliance:
  frameworks:
    - GDPR
    - CCPA
    - SOC2_Type_II
    - ISO_27001
    - NIST_Cybersecurity_Framework
    - OWASP_Top_10
  
  requirements:
    data_protection:
      - encryption_at_rest
      - encryption_in_transit
      - data_minimization
      - right_to_deletion
      - data_portability
      - consent_management
    
    access_control:
      - role_based_access
      - principle_least_privilege
      - multi_factor_authentication
      - session_management
      - audit_logging
    
    monitoring:
      - security_event_logging
      - real_time_monitoring
      - incident_response
      - vulnerability_management
      - penetration_testing
