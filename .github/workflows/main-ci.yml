name: 🚀 EcoSentinel Main CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: 🔧 Setup & Validate
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      node-cache-dir: ${{ steps.node-cache-dir.outputs.dir }}
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps --prefer-offline

      - name: 📊 Cache Dependencies
        id: node-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

  lint-and-typecheck:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps --prefer-offline

      - name: 🔍 Lint Code
        run: npm run lint
        continue-on-error: true

      - name: 📊 TypeScript Check
        run: npm run type-check

  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: setup
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps --prefer-offline

      - name: 🧪 Run Jest Tests
        run: npm run test:jest

  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [lint-and-typecheck, unit-tests]
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps --prefer-offline

      - name: 🏗️ Build Next.js Application
        run: npm run build
        env:
          NODE_ENV: production

      - name: 📊 Build Summary
        run: |
          echo "## 🎉 Build Successful" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Linting completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ TypeScript check passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Unit tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Next.js build completed" >> $GITHUB_STEP_SUMMARY

  e2e-tests:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps --prefer-offline

      - name: 🎭 Install Playwright
        run: npx playwright install chromium

      - name: 🏗️ Build Application
        run: npm run build

      - name: 🚀 Start Application
        run: npm start &
        
      - name: ⏳ Wait for Application
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

      - name: 🎭 Run Playwright Tests
        run: npm run test:e2e

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps --prefer-offline

      - name: 🔒 Security Audit
        run: npm audit --audit-level high || echo "Security issues found but continuing..."

      - name: 🔍 CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript,typescript

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
